[{"D:\\practice\\ReactInterview\\mobigesture\\src\\index.js":"1","D:\\practice\\ReactInterview\\mobigesture\\src\\App.js":"2","D:\\practice\\ReactInterview\\mobigesture\\src\\reportWebVitals.js":"3","D:\\practice\\ReactInterview\\mobigesture\\src\\containers\\index.js":"4","D:\\practice\\ReactInterview\\mobigesture\\src\\store.js":"5","D:\\practice\\ReactInterview\\mobigesture\\src\\reducers\\index.js":"6","D:\\practice\\ReactInterview\\mobigesture\\src\\containers\\routers\\index.js":"7","D:\\practice\\ReactInterview\\mobigesture\\src\\containers\\admin\\index.js":"8","D:\\practice\\ReactInterview\\mobigesture\\src\\components\\selectSearch\\index.js":"9","D:\\practice\\ReactInterview\\mobigesture\\src\\actions\\countries.js":"10","D:\\practice\\ReactInterview\\mobigesture\\src\\utility\\api.js":"11","D:\\practice\\ReactInterview\\mobigesture\\src\\utility\\utilities.js":"12","D:\\practice\\ReactInterview\\mobigesture\\src\\actions\\index.js":"13","D:\\practice\\ReactInterview\\mobigesture\\src\\contants\\index.js":"14","D:\\practice\\ReactInterview\\mobigesture\\src\\reducers\\countries.js":"15"},{"size":650,"mtime":1610113453020,"results":"16","hashOfConfig":"17"},{"size":178,"mtime":1610113322482,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":305,"mtime":1610112955503,"results":"20","hashOfConfig":"17"},{"size":243,"mtime":1610111968028,"results":"21","hashOfConfig":"17"},{"size":184,"mtime":1610120659702,"results":"22","hashOfConfig":"17"},{"size":448,"mtime":1610135142796,"results":"23","hashOfConfig":"17"},{"size":3769,"mtime":1610174690726,"results":"24","hashOfConfig":"17"},{"size":185,"mtime":1610116190334,"results":"25","hashOfConfig":"17"},{"size":1339,"mtime":1610355920795,"results":"26","hashOfConfig":"17"},{"size":96,"mtime":1610355847706,"results":"27","hashOfConfig":"17"},{"size":269,"mtime":1610174937423,"results":"28","hashOfConfig":"17"},{"size":43,"mtime":1610117534729,"results":"29","hashOfConfig":"17"},{"size":173,"mtime":1610116634678,"results":"30","hashOfConfig":"17"},{"size":375,"mtime":1610125195218,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1gs4205",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\practice\\ReactInterview\\mobigesture\\src\\index.js",[],["66","67"],"D:\\practice\\ReactInterview\\mobigesture\\src\\App.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\reportWebVitals.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\containers\\index.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\store.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\reducers\\index.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\containers\\routers\\index.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\containers\\admin\\index.js",["68","69","70"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SelectSearch from '../../components/selectSearch';\r\nimport { getCountries,postData } from '../../actions/countries';\r\nimport { filterByValue } from '../../utility/utilities';\r\nimport { useHistory ,useLocation } from 'react-router-dom';\r\nconst Admin = () => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation()\r\n        const history = useHistory()\r\n    const { data } = useSelector(state => {\r\n        return {\r\n            data: state.CountriesReducer.data\r\n        }\r\n    });\r\n    const [dataList, setDataList] = useState([]);\r\n    const [count, setCount] = useState(1);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [onShowText,setOnShowText] = useState(\"\")\r\n    useEffect(() => {\r\n        if (data) {\r\n            filteringData(data);\r\n        }\r\n\r\n    }, [data]);\r\n    useEffect(() => {\r\n        dispatch(getCountries());\r\n    }, []);\r\n    /****************\r\n     * Fetching and filtering the data from the api.\r\n     * \r\n     */\r\n    const filteringData = (dateObject) =>{\r\n        let newData = []\r\n        if (dateObject.length > 5) {\r\n            let filterData = JSON.parse(JSON.stringify(dateObject));\r\n            // newData\r\n            newData = filterData.slice(0,count*5);\r\n            setCount(count+1);\r\n            let remainValue = filterData.length - newData.length;\r\n            if(remainValue>=5){\r\n                newData.push({ label: \"5more\", value: \"+\" })\r\n            }else if(remainValue<5 && remainValue>0){\r\n                newData.push({ label: remainValue+\"more\", value: \"+\" })\r\n            }\r\n            \r\n        } else {\r\n            newData = JSON.parse(JSON.stringify(data));\r\n        }\r\n        \r\n            setDataList(newData);\r\n    }\r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n    const handleChange = (item) => {\r\n        if(item.value===\"+\"){\r\n            filteringData(data);\r\n        }else{\r\n            setSelectedOption(item)\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"selectWidth\">\r\n                {dataList.length > 0 ? <SelectSearch\r\n                    options={dataList}\r\n                    value={selectedOption}\r\n                    onInputChange={(e) => {\r\n                        let conValue = filterByValue(data,e);\r\n                        if(conValue.length>0){\r\n                            filteringData(conValue);\r\n                            \r\n                            setCount(1);\r\n                        }else{\r\n                            setOnShowText(e);\r\n                        }\r\n                    }}\r\n                    menuIsOpen={menuOpen}\r\n                    onMenuOpen={() => {\r\n                        setMenuOpen(true)\r\n                    }}\r\n                    onBlur={()=>{\r\n                        setMenuOpen(false);\r\n                        setCount(1);\r\n                    }}\r\n                    onChange={(item) => {\r\n                        handleChange(item);\r\n                    }}\r\n                /> : \"\"}\r\n            </div>\r\n            \r\n            {history.location.pathname===\"/user\"?\"\":<div className=\"selectAddWidth\">\r\n                {onShowText}\r\n                <button onClick={(e)=>{\r\n                    let conValue = filterByValue(data,onShowText);\r\n                    if(conValue.length>0){}else{\r\n                        setMenuOpen(false)\r\n                        dispatch(postData(onShowText));\r\n                        setOnShowText(\"\");\r\n                        setCount(1);\r\n                    }\r\n                }}>Add</button>\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","D:\\practice\\ReactInterview\\mobigesture\\src\\components\\selectSearch\\index.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\actions\\countries.js",["71","72"],"\r\nimport * as types from '../contants';\r\nimport * as urls from '../utility/api';\r\nimport {url} from './index';\r\nimport axios from 'axios';\r\n\r\n/**\r\n * sending data to the reducer\r\n * \r\n * \r\n */\r\nexport function getCountriesData(data) {\r\n    return {\r\n        type: types.GET_COUNTRIES_LIST, data\r\n    }\r\n}\r\n\r\n/**\r\n * Fetch all countries\r\n * \r\n */\r\n\r\nexport const getCountries = () => async dispatch =>{\r\n    try{\r\n        const requestUrl = `${urls.GET_COUNTRIES_LIST}`;\r\n        axios.get(requestUrl).then(res=>{\r\n            console.log(res);\r\n            if(res.status===200){\r\n                let resp = res && res.data && res.data.data;\r\n                if(resp.length>0){\r\n                    resp.map(item=>{\r\n                        item.label = item.name;\r\n                        item.value = item.name;\r\n                    })\r\n                }\r\n                dispatch(getCountriesData(resp))\r\n            }\r\n        })\r\n        \r\n    }catch (err) {\r\n        console.log(\"err\")\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Save the Country data in the db\r\n * \r\n */\r\nexport const postData = (data) => async dispatch =>{\r\n    try{\r\n        const requestUrl = `${urls.POST_COUNTRY}`;\r\n        axios.post(requestUrl,{name:data}).then(res=>{\r\n            console.log(res);\r\n            dispatch(getCountries());\r\n        })\r\n    }catch(err){\r\n\r\n    }\r\n}","D:\\practice\\ReactInterview\\mobigesture\\src\\utility\\api.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\utility\\utilities.js",["73"],"import { ajax } from \"rxjs/ajax\";\r\n\r\n\r\n/**\r\n * Fitler the data in the array of object\r\n * \r\n*/\r\n\r\nexport const filterByValue = (array, string) => {\r\n    return array.filter(o =>\r\n        Object.keys(o).some(k => o[k].toLowerCase().includes(string.toLowerCase())));\r\n}\r\n","D:\\practice\\ReactInterview\\mobigesture\\src\\actions\\index.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\contants\\index.js",[],"D:\\practice\\ReactInterview\\mobigesture\\src\\reducers\\countries.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":9,"column":11,"nodeType":"80","messageId":"81","endLine":9,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":25,"column":8,"nodeType":"84","endLine":25,"endColumn":14,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":28,"column":8,"nodeType":"84","endLine":28,"endColumn":10,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"88","line":4,"column":9,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":31,"column":34,"nodeType":"91","messageId":"92","endLine":31,"endColumn":36},{"ruleId":"78","severity":1,"message":"93","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":14},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filteringData'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["97"],"'url' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ajax' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [data, filteringData]",{"range":"102","text":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},[917,923],"[data, filteringData]",[992,994],"[dispatch]"]